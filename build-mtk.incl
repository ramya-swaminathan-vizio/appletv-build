##############################################################################
# MediaTek (MTK) functions for appletv-build
##############################################################################

#-----------------------------------------------------------------------------
# environment set-up
#-----------------------------------------------------------------------------
MTK_PREBUILT_DIR=$APPLETV_BUILD_ROOT/mtk-prebuilt
MTK_COMPLETE_IMG_DIR=$APPLETV_IMG_WORKDIR/basic-egl
MTK_APP_NAME=appletv

VENDOR_FILES="
"
#-----------------------------------------------------------------------------
# Maksym.Shestirko added libcast_sys_info_1.0.so to final tarball
# from the out/chromium this is dummy library, This is need because for
# Widevine need collected information about the platform for successfully init
# if use sys_inflo library provided from MTK this lib is not provided full
# information, therefore widevine can't successfully initialize.
#-----------------------------------------------------------------------------
MTK_CHROMIUM_FILES="
"

MTK_EXTRA_FILES="
post-install.sh
"
#lw app.conf

#-----------------------------------------------------------------------------
# functions expected by build.sh
#-----------------------------------------------------------------------------

build_install_img()
{
  img_ver=$1
  dest_dir="$2/$TARGET"
  echo "RAMYA Iam in build_install_img() img_ver =  dest_dir = " $img_ver $dest_dir

  rm -rf $dest_dir
  mkdir -p $dest_dir
  img=`realpath $dest_dir`/$MTK_APP_NAME.$img_ver.zip

  build_base_img

  # create VERSION file
  cd $MTK_COMPLETE_IMG_DIR || die 2 "Directory '$MTK_COMPLETE_IMG_DIR' doesn't exist"
  echo $img_ver > VERSION

  # add NOTRC file for non-RC builds
  test "$IS_RC_BUILD" != "1" && touch NOTRC

  # create .zip file
  cd $MTK_COMPLETE_IMG_DIR || die 2 "Directory '$MTK_COMPLETE_IMG_DIR' doesn't exist"
  zip -r $img * || die 2 "zip failed to create $img"

  export FINAL_IMG_FILE="$img
 Install on TV with:
\"LD_LIBRARY_PATH=/linux_rootfs/basic:/linux_rootfs/basic/lib:/linux_rootfs/lib /linux_rootfs/bin/miniunz -o <.zip file> -d <dest dir>\""
}

build_dev_tarball()
{
  dest_dir=$1
  mkdir -p $dest_dir

  build_base_img

  # create tarball
  cd $MTK_COMPLETE_IMG_DIR || die 2 "Directory '$MTK_COMPLETE_IMG_DIR' doesn't exist"
  tar czf $dest_dir/appletv_dev.tgz *
}

#-----------------------------------------------------------------------------
# MediaTek functions
#-----------------------------------------------------------------------------

build_base_img()
{
  rm -rf $MTK_COMPLETE_IMG_DIR
  #mkdir -p $MTK_COMPLETE_IMG_DIR/lib
  mkdir -p $MTK_COMPLETE_IMG_DIR
  cd $MTK_COMPLETE_IMG_DIR

  # copy files and directories from appletv build to dest dir,
  # from that dest dir, all contents to be mounted in TV

  #for f in $APPLETV_FILES $APPLETV_PAK_DIRS
  for f in $APPLETV_PAK_DIRS
  do
    cp -R $APPLETV_BASICEGL_ROOT/$f .
  done

  # copy extra files
  for f in $MTK_EXTRA_FILES
   #echo "RAMYA value of f in build_base_img =  "$f
  do
    dirlist="$APPLETV_EXTRAS_DIR"
    for d in $dirlist
    do
     echo "RAMYA value of f= and d= in build_base_img1 =  "$f $d
      cp $d/$f . && break
    done
    test -f $d/$f || die 2 "Can't find file '$f' in '$dirlist'"
  done
 

  # adjust names and permissions for MTK TV
  chmod -R 755 *

  # move shared libs to ./lib
  #mv lib*.so* ./lib
}
